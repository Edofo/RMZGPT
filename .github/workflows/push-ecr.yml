name: Push Image to ECR ðŸš€

on:
  workflow_run:
    workflows: [CI]
    branches: [main]
    types:
      - completed
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+" # Semantic versioning

jobs:
  push-api-image:
    name: Push API image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ secrets.REGISTRY_NAME }}
          ECR_REPOSITORY: rmzgpt/back
          IMAGE_TAG: ${{ github.ref_name }}
        run: |
          docker build -f ./apps/api/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . --no-cache=true
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  push-front-image:
    name: Push Front image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - run: echo VITE_API_URL=$API_URL > ./apps/front/.env
        env:
          API_URL: ${{ secrets.VITE_API_URL_EKS }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ secrets.REGISTRY_NAME }}
          ECR_REPOSITORY: rmzgpt/front
          IMAGE_TAG: ${{ github.ref_name }}
        run: |
          docker build -f ./apps/front/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . --no-cache=true
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
